     /*-                                                                            +
      * Copyright (c) 2001-2023 Scott C. Klement                                    +
      * All rights reserved.                                                        +
      *                                                                             +
      * Redistribution and use in source and binary forms, with or without          +
      * modification, are permitted provided that the following conditions          +
      * are met:                                                                    +
      * 1. Redistributions of source code must retain the above copyright           +
      *    notice, this list of conditions and the following disclaimer.            +
      * 2. Redistributions in binary form must reproduce the above copyright        +
      *    notice, this list of conditions and the following disclaimer in the      +
      *    documentation and/or other materials provided with the distribution.     +
      *                                                                             +
      * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ''AS IS'' AND      +
      * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE       +
      * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE  +
      * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE     +
      * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  +
      * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS     +
      * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)       +
      * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT  +
      * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY   +
      * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF      +
      * SUCH DAMAGE.                                                                +
      *                                                                             +
      */                                                                            +

     *** This is a /copy file containing the constants, prototypes
     *** and structures needed to call IBM's Global Secure Toolkit


     *****************************************************************
     **  These errors may be returned by any of the GSKit functions:
     **
     **  (exception: _INVALID_HANDLE & _INVALID_STATE are never
     **              returned by the 'open' function)
     *****************************************************************
     D GSK_OK...
     D                 C                   CONST(0)
     D GSK_INVALID_HANDLE...
     D                 C                   CONST(1)
     D GSK_API_NOT_AVAILABLE...
     D                 C                   CONST(2)
     D GSK_INTERNAL_ERROR...
     D                 C                   CONST(3)
     D GSK_INSUFFICIENT_STORAGE...
     D                 C                   CONST(4)
     D GSK_INVALID_STATE...
     D                 C                   CONST(5)
     D GSK_KEY_LABEL_NOT_FOUND...
     D                 C                   CONST(6)
     D GSK_CERTIFICATE_NOT_AVAILABLE...
     D                 C                   CONST(7)
     D GSK_ERROR_CERT_VALIDATION...
     D                 C                   CONST(8)
     D GSK_ERROR_CRYPTO...
     D                 C                   CONST(9)
     D GSK_ERROR_ASN...
     D                 C                   CONST(10)
     D GSK_ERROR_LDAP...
     D                 C                   CONST(11)
     D GSK_ERROR_UNKNOWN_ERROR...
     D                 C                   CONST(12)
     D GSK_INVALID_PARAMETER...
     D                 C                   CONST(13)


     *****************************************************************
     ** These errors may be returned by any of the '_open' functions
     *****************************************************************
     D GSK_OPEN_CIPHER_ERROR...
     D                 C                   CONST(101)
     D GSK_KEYFILE_IO_ERROR...
     D                 C                   CONST(102)
     D GSK_KEYFILE_INVALID_FORMAT...
     D                 C                   CONST(103)
     D GSK_KEYFILE_DUPLICATE_KEY...
     D                 C                   CONST(104)
     D GSK_KEYFILE_DUPLICATE_LABEL...
     D                 C                   CONST(105)
     D GSK_BAD_FORMAT_OR_INVALID_PASSWORD...
     D                 C                   CONST(106)
     D GSK_KEYFILE_CERT_EXPIRED...
     D                 C                   CONST(107)
     D GSK_ERROR_LOAD_GSKLIB...
     D                 C                   CONST(108)
     D GSK_PENDING_CLOSE_ERROR...
     D                 C                   CONST(109)


     *****************************************************************
     **  These may be returned by the gsk_enviornment_init function:
     *****************************************************************
     D GSK_NO_KEYFILE_PASSWORD...
     D                 C                   CONST(201)
     D GSK_KEYRING_OPEN_ERROR...
     D                 C                   CONST(202)
     D GSK_RSA_TEMP_KEY_PAIR...
     D                 C                   CONST(203)
     D GSK_ERROR_LDAP_NO_SUCH_OBJECT...
     D                 C                   CONST(204)
     D GSK_ERROR_LDAP_INVALID_CREDENTIALS...
     D                 C                   CONST(205)
     D GSK_ERROR_BAD_INDEX...
     D                 C                   CONST(206)
     D GSK_ERROR_FIPS_NO_SUPPORTED...
     D                 C                   CONST(207)


     *****************************************************************
     **  These may be returned by all '_close' functions:
     *****************************************************************
     D GSK_CLOSE_FAILED...
     D                 C                   CONST(301)


     *****************************************************************
     **  These may be returned by the 'gsk_secure_soc_init' function:
     *****************************************************************
     D GSK_ERROR_BAD_DATE...
     D                 C                   CONST(401)
     D GSK_ERROR_NO_CIPHERS...
     D                 C                   CONST(402)
     D GSK_ERROR_NO_CERTIFICATE...
     D                 C                   CONST(403)
     D GSK_ERROR_BAD_CERTIFICATE...
     D                 C                   CONST(404)
     D GSK_ERROR_UNSUPPORTED_CERTIFICATE_TYPE...
     D                 C                   CONST(405)
     D GSK_ERROR_IO...
     D                 C                   CONST(406)
     D GSK_ERROR_BAD_KEYFILE_LABEL...
     D                 C                   CONST(407)
     D GSK_ERROR_BAD_KEYFILE_PASSWORD...
     D                 C                   CONST(408)
     D GSK_ERROR_BAD_KEY_LEN_FOR_EXPORT...
     D                 C                   CONST(409)
     D GSK_ERROR_BAD_MESSAGE...
     D                 C                   CONST(410)
     D GSK_ERROR_BAD_MAC...
     D                 C                   CONST(411)
     D GSK_ERROR_UNSUPPORTED...
     D                 C                   CONST(412)
     D GSK_ERROR_BAD_CERT_SIG...
     D                 C                   CONST(413)
     D GSK_ERROR_BAD_CERT...
     D                 C                   CONST(414)
     D GSK_ERROR_BAD_PEER...
     D                 C                   CONST(415)
     D GSK_ERROR_PERMISSION_DENIED...
     D                 C                   CONST(416)
     D GSK_ERROR_SELF_SIGNED...
     D                 C                   CONST(417)
     D GSK_ERROR_NO_READ_FUNCTION...
     D                 C                   CONST(418)
     D GSK_ERROR_NO_WRITE_FUNCTION...
     D                 C                   CONST(419)
     D GSK_ERROR_SOCKET_CLOSED...
     D                 C                   CONST(420)
     D GSK_ERROR_BAD_V2_CIPHER...
     D                 C                   CONST(421)
     D GSK_ERROR_BAD_V3_CIPHER...
     D                 C                   CONST(422)
     D GSK_ERROR_BAD_SEC_TYPE...
     D                 C                   CONST(423)
     D GSK_ERROR_BAD_SEC_TYPE_COMBINATION...
     D                 C                   CONST(424)
     D GSK_ERROR_HANDLE_CREATION_FAILED...
     D                 C                   CONST(425)
     D GSK_ERROR_INITIALIZATION_FAILED...
     D                 C                   CONST(426)
     D GSK_ERROR_LDAP_NOT_AVAILABLE...
     D                 C                   CONST(427)
     D GSK_ERROR_NO_PRIVATE_KEY...
     D                 C                   CONST(428)
     D GSK_ERROR_PKCS11_LIBRARY_NOTLOADED...
     D                 C                   CONST(429)
     D GSK_ERROR_PKCS11_TOKEN_LABELMISMATH...
     D                 C                   CONST(430)
     D GSK_ERROR_PKCS11_TOKEN_NOTPRESENT...
     D                 C                   CONST(431)
     D GSK_ERROR_PKCS11_TOKEN_BADPASSWORD...
     D                 C                   CONST(432)
     D GSK_ERROR_INVALID_V2_HEADER...
     D                 C                   CONST(433)
     D GSK_CSP_OPEN_ERROR...
     D                 C                   CONST(434)
     D GSK_CONFLICTING_ATTRIBUTE_SETTING...
     D                 C                   CONST(435)
     D GSK_UNSUPPORTED_PLATFORM...
     D                 C                   CONST(436)
     D GSK_PEERID_NOT_SET_ERROR...
     D                 C                   CONST(437)
     D GSK_ERROR_INCORRECT_SESSION_TYPE...
     D                 C                   CONST(438)
     D GSK_ERROR_BAD_TLSV11_CIPHER...
     D                 C                   CONST(439)
     D GSK_ERROR_PKCS11_DEVICE...
     D                 C                   CONST(440)
     D GSK_ERROR_PKCS11_DEVICE_SEVERE...
     D                 C                   CONST(441)

      * special conditions
     D GSK_ERROR_EMPTY_DATA_SEGMENT...
     D                 C                   CONST(442)
     D GSK_ERROR_NO_RI_INDICATION...
     D                 C                   CONST(443)
     D GSK_ERROR_SEQNUM_EXHAUSTED...
     D                 C                   CONST(444)

     *****************************************************************
     **  These may be returned by the read and write functions:
     *****************************************************************
     D GSK_INVALID_BUFFER_SIZE...
     D                 C                   CONST(501)
     D GSK_WOULD_BLOCK...
     D                 C                   CONST(502)
     D GSK_ERROR_SSL_CLOSED...
     D                 C                   CONST(503)


     *****************************************************************
     **  These may be returned by the gsk_secure_soc_misc function:
     *****************************************************************
     D GSK_ERROR_NOT_SSLV3...
     D                 C                   CONST(601)
     D GSK_MISC_INVALID_ID...
     D                 C                   CONST(602)


     *****************************************************************
     **  These may be returned by the gsk_attribute_set_ functions:
     *****************************************************************
     D GSK_ATTRIBUTE_INVALID_ID...
     D                 C                   CONST(701)
     D GSK_ATTRIBUTE_INVALID_LENGTH...
     D                 C                   CONST(702)
     D GSK_ATTRIBUTE_INVALID_ENUMERATION...
     D                 C                   CONST(703)
     D GSK_ATTRIBUTE_INVALID_SID_CACHE...
     D                 C                   CONST(704)
     D GSK_ATTRIBUTE_INVALID_NUMERIC_VALUE...
     D                 C                   CONST(705)
     D GSK_CONFLICTING_VALIDATION_SETTING...
     D                 C                   CONST(706)
     D GSK_AES_UNSUPPORTED...
     D                 C                   CONST(707)
     D GSK_PEERID_LENGTH_ERROR...
     D                 C                   CONST(708)
     D GSK_FIPS_CIPHER_INVALID_WHEN_FIPS_MODE_OFF...
     D                 C                   CONST(709)
     D GSK_CIPHER_INVALID_WHEN_FIPS_MODE_ON...
     D                 C                   CONST(710)
     D GSK_CIPHER_INVALID_WHEN_SUITEB_MODE_ON...
     D                 C                   CONST(711)

     *****************************************************************
     **  The following are codes that can be returned from the
     **  certificate validation engine.  The result of the last
     **  validation operation can be retrieved by a call to the
     **  gsk_get_last_validation_error function.
     *****************************************************************
     D GSKKM_OK...
     D                 C                   CONST(0)
     D GSKKM_ERROR_SUCCESS...
     D                 C                   CONST(0)
     D GSKKM_ERROR_UNKNOWN...
     D                 C                   CONST(1)
     D GSKKM_ERROR_ASN...
     D                 C                   CONST(2)
     D GSKKM_ERROR_ASN_INITIALIZATION...
     D                 C                   CONST(3)
     D GSKKM_ERROR_ASN_PARAMETER...
     D                 C                   CONST(4)
     D GSKKM_ERROR_DATABASE...
     D                 C                   CONST(5)
     D GSKKM_ERROR_DATABASE_OPEN...
     D                 C                   CONST(6)
     D GSKKM_ERROR_DATABASE_RE_OPEN...
     D                 C                   CONST(7)
     D GSKKM_ERROR_DATABASE_CREATE...
     D                 C                   CONST(8)
     D GSKKM_ERROR_DATABASE_ALREADY_EXISTS...
     D                 C                   CONST(9)
     D GSKKM_ERROR_DATABASE_DELETE...
     D                 C                   CONST(10)
     D GSKKM_ERROR_DATABASE_NOT_OPENED...
     D                 C                   CONST(11)
     D GSKKM_ERROR_DATABASE_READ...
     D                 C                   CONST(12)
     D GSKKM_ERROR_DATABASE_WRITE...
     D                 C                   CONST(13)
     D GSKKM_ERROR_DATABASE_VALIDATION...
     D                 C                   CONST(14)
     D GSKKM_ERROR_DATABASE_INVALID_VERSION...
     D                 C                   CONST(15)
     D GSKKM_ERROR_DATABASE_INVALID_PASSWORD...
     D                 C                   CONST(16)
     D GSKKM_ERROR_DATABASE_INVALID_FILE_TYPE...
     D                 C                   CONST(17)
     D GSKKM_ERROR_DATABASE_CORRUPTION...
     D                 C                   CONST(18)
     D GSKKM_ERROR_DATABASE_PASSWORD_CORRUPTION...
     D                 C                   CONST(19)
     D GSKKM_ERROR_DATABASE_KEY_INTEGRITY...
     D                 C                   CONST(20)
     D GSKKM_ERROR_DATABASE_DUPLICATE_KEY...
     D                 C                   CONST(21)
     D GSKKM_ERROR_DATABASE_PASSWORD_ENCRYPTION...
     D                 C                   CONST(22)
     D GSKKM_ERROR_DATABASE_LDAP...
     D                 C                   CONST(23)
     D GSKKM_ERROR_CRYPTO...
     D                 C                   CONST(24)
     D GSKKM_ERROR_CRYPTO_ENGINE...
     D                 C                   CONST(25)
     D GSKKM_ERROR_CRYPTO_ALGORITHM...
     D                 C                   CONST(26)
     D GSKKM_ERROR_CRYPTO_SIGN...
     D                 C                   CONST(27)
     D GSKKM_ERROR_CRYPTO_VERIFY...
     D                 C                   CONST(28)
     D GSKKM_ERROR_CRYPTO_DIGEST...
     D                 C                   CONST(29)
     D GSKKM_ERROR_CRYPTO_PARAMETER...
     D                 C                   CONST(30)
     D GSKKM_ERROR_CRYPTO_UNSUPPORTED_ALGORITHM...
     D                 C                   CONST(31)
     D GSKKM_ERROR_CRYPTO_INPUT_GREATER_THAN_MODULUS...
     D                 C                   CONST(32)
     D GSKKM_ERROR_CRYPTO_UNSUPPORTED_MODULUS_SIZE...
     D                 C                   CONST(33)
     D GSKKM_ERROR_VALIDATION...
     D                 C                   CONST(34)
     D GSKKM_ERROR_VALIDATION_KEY...
     D                 C                   CONST(35)
     D GSKKM_ERROR_VALIDATION_DUPLICATE_EXTENSIONS...
     D                 C                   CONST(36)
     D GSKKM_ERROR_VALIDATION_KEY_WRONG_VERSION...
     D                 C                   CONST(37)
     D GSKKM_ERROR_VALIDATION_KEY_EXTENSIONS_REQUIRED...
     D                 C                   CONST(38)
     D GSKKM_ERROR_VALIDATION_KEY_VALIDITY...
     D                 C                   CONST(39)
     D GSKKM_ERROR_VALIDATION_KEY_VALIDITY_PERIOD...
     D                 C                   CONST(40)
     D GSKKM_ERROR_VALIDATION_KEY_VALIDITY_PRIVATE_KEY_USAGE...
     D                 C                   CONST(41)
     D GSKKM_ERROR_VALIDATION_KEY_ISSUER_NOT_FOUND...
     D                 C                   CONST(42)
     D GSKKM_ERROR_VALIDATION_KEY_MISSING_REQUIRED_EXTENSIONS...
     D                 C                   CONST(43)
     D GSKKM_ERROR_VALIDATION_KEY_BASIC_CONSTRAINTS...
     D                 C                   CONST(44)
     D GSKKM_ERROR_VALIDATION_KEY_SIGNATURE...
     D                 C                   CONST(45)
     D GSKKM_ERROR_VALIDATION_KEY_ROOT_KEY_NOT_TRUSTED...
     D                 C                   CONST(46)
     D GSKKM_ERROR_VALIDATION_KEY_IS_REVOKED...
     D                 C                   CONST(47)
     D GSKKM_ERROR_VALIDATION_KEY_AUTHORITY_KEY_IDENTIFIER...
     D                 C                   CONST(48)
     D GSKKM_ERROR_VALIDATION_KEY_PRIVATE_KEY_USAGE_PERIOD...
     D                 C                   CONST(49)
     D GSKKM_ERROR_VALIDATION_SUBJECT_ALTERNATIVE_NAME...
     D                 C                   CONST(50)
     D GSKKM_ERROR_VALIDATION_ISSUER_ALTERNATIVE_NAME...
     D                 C                   CONST(51)
     D GSKKM_ERROR_VALIDATION_KEY_USAGE...
     D                 C                   CONST(52)
     D GSKKM_ERROR_VALIDATION_KEY_UNKNOWN_CRITICAL_EXTENSION...
     D                 C                   CONST(53)
     D GSKKM_ERROR_VALIDATION_KEY_PAIR...
     D                 C                   CONST(54)
     D GSKKM_ERROR_VALIDATION_CRL...
     D                 C                   CONST(55)
     D GSKKM_ERROR_MUTEX...
     D                 C                   CONST(56)
     D GSKKM_ERROR_PARAMETER...
     D                 C                   CONST(57)
     D GSKKM_ERROR_NULL_PARAMETER...
     D                 C                   CONST(58)
     D GSKKM_ERROR_NUMBER_SIZE...
     D                 C                   CONST(59)
     D GSKKM_ERROR_OLD_PASSWORD...
     D                 C                   CONST(60)
     D GSKKM_ERROR_NEW_PASSWORD...
     D                 C                   CONST(61)
     D GSKKM_ERROR_PASSWORD_EXPIRATION_TIME...
     D                 C                   CONST(62)
     D GSKKM_ERROR_THREAD...
     D                 C                   CONST(63)
     D GSKKM_ERROR_THREAD_CREATE...
     D                 C                   CONST(64)
     D GSKKM_ERROR_THREAD_WAIT_FOR_EXIT...
     D                 C                   CONST(65)
     D GSKKM_ERROR_IO...
     D                 C                   CONST(66)
     D GSKKM_ERROR_LOAD...
     D                 C                   CONST(67)
     D GSKKM_ERROR_PKCS11...
     D                 C                   CONST(68)
     D GSKKM_ERROR_NOT_INITIALIZED...
     D                 C                   CONST(69)
     D GSKKM_ERROR_DB_TABLE_CORRUPTED...
     D                 C                   CONST(70)
     D GSKKM_ERROR_MEMORY_ALLOCATE...
     D                 C                   CONST(71)
     D GSKKM_ERROR_UNSUPPORTED_OPTION...
     D                 C                   CONST(72)
     D GSKKM_ERROR_GET_TIME...
     D                 C                   CONST(73)
     D GSKKM_ERROR_CREATE_MUTEX...
     D                 C                   CONST(74)
     D GSKKM_ERROR_CMDCAT_OPEN...
     D                 C                   CONST(75)
     D GSKKM_ERROR_ERRCAT_OPEN...
     D                 C                   CONST(76)
     D GSKKM_ERROR_FILENAME_NULL...
     D                 C                   CONST(77)
     D GSKKM_ERROR_FILE_OPEN...
     D                 C                   CONST(78)
     D GSKKM_ERROR_FILE_OPEN_TO_READ...
     D                 C                   CONST(79)
     D GSKKM_ERROR_FILE_OPEN_TO_WRITE...
     D                 C                   CONST(80)
     D GSKKM_ERROR_FILE_OPEN_NOT_EXIST...
     D                 C                   CONST(81)
     D GSKKM_ERROR_FILE_OPEN_NOT_ALLOWED...
     D                 C                   CONST(82)
     D GSKKM_ERROR_FILE_WRITE...
     D                 C                   CONST(83)
     D GSKKM_ERROR_FILE_REMOVE...
     D                 C                   CONST(84)
     D GSKKM_ERROR_BASE64_INVALID_DATA...
     D                 C                   CONST(85)
     D GSKKM_ERROR_BASE64_INVALID_MSGTYPE...
     D                 C                   CONST(86)
     D GSKKM_ERROR_BASE64_ENCODING...
     D                 C                   CONST(87)
     D GSKKM_ERROR_BASE64_DECODING...
     D                 C                   CONST(88)
     D GSKKM_ERROR_DN_TAG_NULL...
     D                 C                   CONST(89)
     D GSKKM_ERROR_DN_CN_NULL...
     D                 C                   CONST(90)
     D GSKKM_ERROR_DN_C_NULL...
     D                 C                   CONST(91)
     D GSKKM_ERROR_INVALID_DB_HANDLE...
     D                 C                   CONST(92)
     D GSKKM_ERROR_KEYDB_NOT_EXIST...
     D                 C                   CONST(93)
     D GSKKM_ERROR_KEYPAIRDB_NOT_EXIST...
     D                 C                   CONST(94)
     D GSKKM_ERROR_PWDFILE_NOT_EXIST...
     D                 C                   CONST(95)
     D GSKKM_ERROR_PASSWORD_CHANGE_MATCH...
     D                 C                   CONST(96)
     D GSKKM_ERROR_KEYDB_NULL...
     D                 C                   CONST(97)
     D GSKKM_ERROR_REQKEYDB_NULL...
     D                 C                   CONST(98)
     D GSKKM_ERROR_KEYDB_TRUSTCA_NULL...
     D                 C                   CONST(99)
     D GSKKM_ERROR_REQKEY_FOR_CERT_NULL...
     D                 C                   CONST(100)
     D GSKKM_ERROR_KEYDB_PRIVATE_KEY_NULL...
     D                 C                   CONST(101)
     D GSKKM_ERROR_KEYDB_DEFAULT_KEY_NULL...
     D                 C                   CONST(102)
     D GSKKM_ERROR_KEYREC_PRIVATE_KEY_NULL...
     D                 C                   CONST(103)
     D GSKKM_ERROR_KEYREC_CERTIFICATE_NULL...
     D                 C                   CONST(104)
     D GSKKM_ERROR_CRLS_NULL...
     D                 C                   CONST(105)
     D GSKKM_ERROR_INVALID_KEYDB_NAME...
     D                 C                   CONST(106)
     D GSKKM_ERROR_UNDEFINED_KEY_TYPE...
     D                 C                   CONST(107)
     D GSKKM_ERROR_INVALID_DN_INPUT...
     D                 C                   CONST(108)
     D GSKKM_ERROR_KEY_GET_BY_LABEL...
     D                 C                   CONST(109)
     D GSKKM_ERROR_LABEL_LIST_CORRUPT...
     D                 C                   CONST(110)
     D GSKKM_ERROR_INVALID_PKCS12_DATA...
     D                 C                   CONST(111)
     D GSKKM_ERROR_PKCS12_PWD_CORRUPTION...
     D                 C                   CONST(112)
     D GSKKM_ERROR_EXPORT_TYPE...
     D                 C                   CONST(113)
     D GSKKM_ERROR_PBE_ALG_UNSUPPORT...
     D                 C                   CONST(114)
     D GSKKM_ERROR_KYR2KDB...
     D                 C                   CONST(115)
     D GSKKM_ERROR_KDB2KYR...
     D                 C                   CONST(116)
     D GSKKM_ERROR_ISSUING_CERTIFICATE...
     D                 C                   CONST(117)
     D GSKKM_ERROR_FIND_ISSUER_CHAIN...
     D                 C                   CONST(118)
     D GSKKM_ERROR_WEBDB_DATA_BAD_FORMAT...
     D                 C                   CONST(119)
     D GSKKM_ERROR_WEBDB_NOTHING_TO_WRITE...
     D                 C                   CONST(120)
     D GSKKM_ERROR_EXPIRE_DAYS_TOO_LARGE...
     D                 C                   CONST(121)
     D GSKKM_ERROR_PWD_TOO_SHORT...
     D                 C                   CONST(122)
     D GSKKM_ERROR_PWD_NO_NUMBER...
     D                 C                   CONST(123)
     D GSKKM_ERROR_PWD_NO_CONTROL_KEY...
     D                 C                   CONST(124)

     D GSKVAL_ERROR_UNKNOWN_ERROR...
     D                 C                   CONST(575001)
     D GSKVAL_ERROR_ASN_ERROR...
     D                 C                   CONST(575002)
     D GSKVAL_ERROR_KRY_ERROR...
     D                 C                   CONST(575003)
     D GSKVAL_ERROR_DB_ERROR...
     D                 C                   CONST(575004)
     D GSKVAL_ERROR_DIR_ERROR...
     D                 C                   CONST(575005)
     D GSKVAL_ERROR_INVALID_IMPL_LIBRARY...
     D                 C                   CONST(575006)
     D GSKVAL_ERROR_FAILED...
     D                 C                   CONST(575007)
     D GSKVAL_ERROR_NO_APPROPRIATE_VALIDATOR...
     D                 C                   CONST(575008)
     D GSKVAL_ERROR_ROOT_NOT_TRUSTED...
     D                 C                   CONST(575009)
     D GSKVAL_ERROR_NO_CHAIN_BUILT...
     D                 C                   CONST(575010)
     D GSKVAL_ERROR_SIGALG_MISMATCH...
     D                 C                   CONST(575011)
     D GSKVAL_ERROR_SIGNATURE_MISMATCH...
     D                 C                   CONST(575012)
     D GSKVAL_ERROR_VER_EXCLUDES_UNIQUE_IDS...
     D                 C                   CONST(575013)
     D GSKVAL_ERROR_VER_EXCLUDES_EXTNS...
     D                 C                   CONST(575014)
     D GSKVAL_ERROR_UNKNOWN_VERSION...
     D                 C                   CONST(575015)
     D GSKVAL_ERROR_BAD_VALIDITY_RANGE...
     D                 C                   CONST(575016)
     D GSKVAL_ERROR_CERT_NOT_YET_VALID...
     D                 C                   CONST(575017)
     D GSKVAL_ERROR_CERT_EXPIRED...
     D                 C                   CONST(575018)
     D GSKVAL_ERROR_UNKNOWN_CRIT_XTNS...
     D                 C                   CONST(575019)
     D GSKVAL_ERROR_DUP_XTNS...
     D                 C                   CONST(575020)
     D GSKVAL_ERROR_DIRNAMES_DONT_MATCH...
     D                 C                   CONST(575021)
     D GSKVAL_ERROR_SERIAL_NUMBERS_DONT_MATCH...
     D                 C                   CONST(575022)
     D GSKVAL_ERROR_KEY_IDS_DONT_MATCH...
     D                 C                   CONST(575023)
     D GSKVAL_ERROR_UNRECOGNIZED_ISSUERALTNAME...
     D                 C                   CONST(575024)
     D GSKVAL_ERROR_BASIC_CONTRAINTS_NOT_CA...
     D                 C                   CONST(575025)
     D GSKVAL_ERROR_PATHLENGTH_WITH_NONCA...
     D                 C                   CONST(575026)
     D GSKVAL_ERROR_BASIC_CONSTRAINTS_PATHLENGTH_EXCEEEDED...
     D                 C                   CONST(575027)
     D GSKVAL_ERROR_NO_SIGN_AUTH...
     D                 C                   CONST(575028)
     D GSKVAL_ERROR_NONCA_SIGNED...
     D                 C                   CONST(575029)
     D GSKVAL_ERROR_UNRECOGNIZED_SUBJECTALTNAME...
     D                 C                   CONST(575030)
     D GSKVAL_ERROR_INVALID_CHAIN...
     D                 C                   CONST(575031)
     D GSKVAL_ERROR_REVOKED_CERT...
     D                 C                   CONST(575032)
     D GSKVAL_ERROR_UNRECOGNIZED_DISTRIBUTION_POINT...
     D                 C                   CONST(575033)
     D GSKVAL_ERROR_NAME_CHAINING_FAILED...
     D                 C                   CONST(575034)
     D GSKVAL_ERROR_CERT_NOT_IN_CHAIN...
     D                 C                   CONST(575035)
     D GSKVAL_ERROR_CRL_NOT_YET_VALID...
     D                 C                   CONST(575036)
     D GSKVAL_ERROR_CRL_EXPIRED...
     D                 C                   CONST(575037)
     D GSKVAL_ERROR_VER_EXCLUDES_CRIT_EXTNS...
     D                 C                   CONST(575038)
     D GSKVAL_ERROR_UNKNOWN_CRL_DIST_PTS...
     D                 C                   CONST(575039)
     D GSKVAL_ERROR_NO_CRLS_FOR_CRL_DIST_PTS...
     D                 C                   CONST(575040)
     D GSKVAL_ERROR_DIST_PTS_DONT_MATCH...
     D                 C                   CONST(575041)
     D GSKVAL_ERROR_NO_AVAILABLE_CRL_DATASOURCE...
     D                 C                   CONST(575042)

      *--- PKIX specific:
     D GSKVAL_ERROR_NULL_CA_SUBJECT...
     D                 C                   CONST(575043)
     D GSKVAL_ERROR_NAMES_DONT_CHAIN...
     D                 C                   CONST(575044)
     D GSKVAL_ERROR_MISSING_SUBJECTALTNAME...
     D                 C                   CONST(575045)
     D GSKVAL_ERROR_UNIQUEID_MISMATCH...
     D                 C                   CONST(575046)
     D GSKVAL_ERROR_NAME_NOT_PERMITTED...
     D                 C                   CONST(575047)
     D GSKVAL_ERROR_NAME_EXCLUDED...
     D                 C                   CONST(575048)
     D GSKVAL_ERROR_CA_MISSING_CRITICAL_BASIC_CONSTRAINT...
     D                 C                   CONST(575049)
     D GSKVAL_ERROR_NAME_CONSTRAINTS_NOT_CRITICAL...
     D                 C                   CONST(575050)
     D GSKVAL_ERROR_NAME_CONSTRAINTS_MIN_NOT_ZERO...
     D                 C                   CONST(575051)
     D GSKVAL_ERROR_NAME_CONSTRAINTS_MAX_PRESENT...
     D                 C                   CONST(575052)
     D GSKVAL_ERROR_UNSUPPORTED_NAME_CONSTRAINT...
     D                 C                   CONST(575053)
     D GSKVAL_ERROR_EMPTY_POLICY_CONSTRAINTS...
     D                 C                   CONST(575054)
     D GSKVAL_ERROR_BAD_CERT_POLICIES...
     D                 C                   CONST(575055)
     D GSKVAL_ERROR_CERT_POLICIES_NOT_ACCEPTABLE...
     D                 C                   CONST(575056)
     D GSKVAL_ERROR_BAD_ACCEPTABLE_POLICIES...
     D                 C                   CONST(575057)
     D GSKVAL_ERROR_POLICY_MAPPINGS_CRITICAL...
     D                 C                   CONST(575058)
     D GSKVAL_ERROR_CERT_CUR_VALID_NOT_VALID_IN_RANGE...
     D                 C                   CONST(575059)
     D GSKVAL_ERROR_NO_UPCALL_PROCESS...
     D                 C                   CONST(575061)
     D GSKVAL_ERROR_EXTKEYUSG_BADAUTH...
     D                 C                   CONST(575062)
     D GSKVAL_ERROR_OCSP_UNKNOWNVERSION...
     D                 C                   CONST(575063)
     D GSKVAL_ERROR_OCSP_UNKNOWNRESPONSE...
     D                 C                   CONST(575064)
     D GSKVAL_ERROR_OCSP_BAD_KEYUSAGE_XTN...
     D                 C                   CONST(575065)
     D GSKVAL_ERROR_OCSP_BAD_NONCE...
     D                 C                   CONST(575066)
     D GSKVAL_ERROR_OCSP_MISSING_NONCE...
     D                 C                   CONST(575067)
     D GSKVAL_ERROR_OCSP_NO_CLIENT...
     D                 C                   CONST(575068)
     D GSKVAL_ERROR_REVOCATIONSTATUS_UNDETERMINED...
     D                 C                   CONST(575961)


     *****************************************************************
     **  These may be returned by the cert prompt callback routine:
     *****************************************************************
     D GSK_SC_OK...
     D                 C                   CONST(1501)
     D GSK_SC_CANCEL...
     D                 C                   CONST(1502)

     ******************************************************************
     ** The followed is returned by gskit to pkcs11 callback routine
     ** when the password user entered is not correct...
     ** (This is a string in QSYSINC/H GSKSSL -- not sure why. -SCK)
     ******************************************************************
     D GSK_NOT_FIRST_CALL...
     D                 c                   CONST('0xFFFFFFFF')

     *****************************************************************
     ** The following is returned by gsk_start_trace() and
     **  and gsk_stop_trace()
     *****************************************************************
     D GSK_TRACE_STARTED...
     D                 C                   CONST(1601)
     D GSK_TRACE_STOPPED...
     D                 C                   CONST(1602)
     D GSK_TRACE_NOT_STARTED...
     D                 C                   CONST(1603)
     D GSK_TRACE_ALREADY_STARTED...
     D                 C                   CONST(1604)
     D GSK_TRACE_OPEN_FAILED...
     D                 C                   CONST(1605)

     *****************************************************************
     ** The following is used by gsk_start_trace and gsk_stop_trace
     *****************************************************************
     ** GSKTrace Global Options
     D GSKTRACENOOPTIONS...
     D                 C                   CONST(0)
     D GSKTRACEALLOPTIONS...
     D                 C                   CONST(4294967295)
     D GSKTRACEDEFAULTOPTIONS...
     D                 C                   CONST(0)
     D GSKTRACENOBUFFERING...
     D                 C                   CONST(1)
     D GSKTRACENOCOPY...
     D                 C                   CONST(2)
     ** GSKTrace Components
     D GSKTRACENOCOMPONENTS...
     D                 C                   CONST(0)
     D GSKTRACEALLCOMPONENTS...
     D                 C                   CONST(4294967295)
     D GSKTRACECOMMON...
     D                 C                   CONST(1)
     D GSKTRACEASN...
     D                 C                   CONST(2)
     D GSKTRACEKRY...
     D                 C                   CONST(4)
     D GSKTRACEDB...
     D                 C                   CONST(8)
     D GSKTRACEVAL...
     D                 C                   CONST(16)
     D GSKTRACECMS...
     D                 C                   CONST(32)
     D GSKTRACESSL...
     D                 C                   CONST(64)
     D GSKTRACEIKM...
     D                 C                   CONST(128)
     D GSKTRACEDIR...
     D                 C                   CONST(256)
     D GSKTRACEPKCS11...
     D                 C                   CONST(512)
     D GSKTRACEACME...
     D                 C                   CONST(1024)
     D GSKTRACECAPI...
     D                 C                   CONST(2048)
     D GSKTRACEICC...
     D                 C                   CONST(4096)
     ** GSKTrace Reserved Events
     D GSKTRACE_NOEVENTS...
     D                 C                   CONST(0)
     D GSKTRACE_ALLEVENTS...
     D                 C                   CONST(4294967295)
     D GSKTRACE_ENTRY...
     D                 C                   CONST(2147483648)
     D GSKTRACE_EXIT...
     D                 C                   CONST(1073741824)
     D GSKTRACE_THREADSTART...
     D                 C                   CONST(536870912)
     ** GSKTrace Events
     D GSKTRACE_MESSAGE...
     D                 C                   CONST(1)
     D GSKTRACE_EXCEPTION...
     D                 C                   CONST(2)
     D GSKTRACE_KRYALGORITHM...
     D                 C                   CONST(4)
     D GSKTRACE_VALCHAIN...
     D                 C                   CONST(8)

     *****************************************************************
     ** Algorithm OID string constants
     *****************************************************************
     D algRSA...
     D                 C                   CONST('1.2.840.113549.1.1.1')
     D algDSA...
     D                 C                   CONST('1.3.14.3.2.12')
     D algMD2WithRSAencryption...
     D                 C                   CONST('1.2.840.113549.1.1.2')
     D algMD5WithRSAencryption...
     D                 C                   CONST('1.2.840.113549.1.1.4')
     D algSHA1WithRSAencryption...
     D                 C                   CONST('1.2.840.113549.1.1.5')
     D algSHA1WithDSAencryption...
     D                 C                   CONST('1.2.840.10040.4.3')
     D algPBEWithMD2AndDESCBC...
     D                 C                   CONST('1.2.840.113549.1.5.1')
     D algPBEWithMD5AndDESCBC...
     D                 C                   CONST('1.2.840.113549.1.5.3')
     D algPBEWithSHA1AndDESCBC...
     D                 C                   CONST('1.2.840.113549.1.5.10')
     D algPBEWithSHA1And40BitRC2...
     D                 C                   CONST('1.2.840.113549.1.12.5.1.5')
     D algPBEWithSHA1And128BitRC2...
     D                 C                   CONST('1.2.840.113549.1.12.5.1.4')
     D algPBEWithSHA1And40BitRC4...
     D                 C                   CONST('1.2.840.113549.1.12.5.1.2')
     D algPBEWithSHA1And128BitRC4...
     D                 C                   CONST('1.2.840.113549.1.12.5.1.1')
     D algPBEWithSHA1And3DESCBC...
     D                 C                   CONST('1.2.840.113549.1.12.5.1.3')
     D algMD5DigestAlgorithm...
     D                 C                   CONST('1.2.840.113549.2.5')
     D algSHA1DigestAlgorithm...
     D                 C                   CONST('1.3.14.3.2.26')

     *****************************************************************
     ** Key Usage
     *****************************************************************
     D digitalSignature...
     D                 C                   CONST(1)
     D nonRepudiation...
     D                 C                   CONST(2)
     D KeyEncipherment...
     D                 C                   CONST(4)
     D dataEncipherment...
     D                 C                   CONST(8)
     D KeyAgreement...
     D                 C                   CONST(16)
     D KeyCertSign...
     D                 C                   CONST(32)
     D cRlSign...
     D                 C                   CONST(64)
     D encipherOnly...
     D                 C                   CONST(128)
     D decipherOnly...
     D                 C                   CONST(256)

     *****************************************************************
     ** IBMI specific constants
     *****************************************************************
     D GSK_IBMI_ERROR_NOT_TRUSTED_ROOT...
     D                 C                   CONST(6000)
     D GSK_IBMI_ERROR_PASSWORD_EXPIRED...
     D                 C                   CONST(6001)
     D GSK_IBMI_ERROR_NOT_REGISTERED...
     D                 C                   CONST(6002)
     D GSK_IBMI_ERROR_NO_ACCESS...
     D                 C                   CONST(6003)
     D GSK_IBMI_ERROR_CLOSED...
     D                 C                   CONST(6004)
     D GSK_IBMI_ERROR_NO_CERTIFICATE_AUTHORITIES...
     D                 C                   CONST(6005)
     D GSK_IBMI_ERROR_NO_INITIALIZE...
     D                 C                   CONST(6007)
     D GSK_IBMI_ERROR_ALREADY_SECURE...
     D                 C                   CONST(6008)
     D GSK_IBMI_ERROR_NOT_TCP...
     D                 C                   CONST(6009)
     D GSK_IBMI_ERROR_INVALID_POINTER...
     D                 C                   CONST(6010)
     D GSK_IBMI_ERROR_TIMED_OUT...
     D                 C                   CONST(6011)
     D GSK_IBMI_ASYNCHRONOUS_RECV...
     D                 C                   CONST(6012)
     D GSK_IBMI_ASYNCHRONOUS_SEND...
     D                 C                   CONST(6013)
     D GSK_IBMI_ERROR_INVALID_OVERLAPPEDIO_T...
     D                 C                   CONST(6014)
     D GSK_IBMI_ERROR_INVALID_IOCOMPLETIONPORT...
     D                 C                   CONST(6015)
     D GSK_IBMI_ERROR_BAD_SOCKET_DESCRIPTOR...
     D                 C                   CONST(6016)
     D GSK_IBMI_ERROR_CERTIFICATE_REVOKED...
     D                 C                   CONST(6017)
     D GSK_IBMI_ERROR_CRL_INVALID...
     D                 C                   CONST(6018)
     D GSK_IBMI_ERROR_ASYNCHRONOUS_SOC_INIT...
     D                 C                   CONST(6019)
     D GSK_IBMI_4BYTE_VALUE...
     D                 C                   CONST(70000)


     *****************************************************************
     **  end of constants / start of structures
     *****************************************************************
     D gsk_handle      S               *


     *****************************************************************
     **   typedef enum GSK_MISC_ID_T
     **   {
     **     GSK_RESET_CIPHER = 100,  /* Rerun handshake */
     **     GSK_RESET_SESSION = 101, /* Reset SID entry */
     **                  /* Force enum size to 4 bytes - do not use this value */
     **     GSK_IBMI_MISC_FINAL = GSK_IBMI_4BYTE_VALUE
     **
     **   } GSK_MISC_ID;
     *****************************************************************
     D GSK_MISC_ID     S             10I 0
     D GSK_RESET_CIPHER...
     D                 C                   CONST(100)
     D GSK_RESET_SESSION...
     D                 C                   CONST(101)
     D GSK_RESET_CIPHER_WITHNEWSESSION...
     D                 C                   CONST(102)
     D GSK_CLOSE_NOTIFY...
     D                 C                   CONST(103)


     *****************************************************************
     **   typedef enum GSK_BUF_ID_T
     **   {
     **     GSK_USER_DATA = 200,
     **     GSK_KEYRING_FILE = 201,
     **     GSK_KEYRING_PW = 202,
     **     GSK_KEYRING_LABEL = 203,
     **     GSK_KEYRING_STASH_FILE = 204,
     **     GSK_V2_CIPHER_SPECS = 205,
     **     GSK_V3_CIPHER_SPECS = 206,
     **     GSK_CONNECT_CIPHER_SPEC = 207,
     **     GSK_CONNECT_SEC_TYPE = 208,
     **     GSK_LDAP_SERVER = 209,
     **     GSK_LDAP_USER = 210,
     **     GSK_LDAP_USER_PW = 211,
     **     GSK_SID_VALUE = 212,
     **     GSK_PKCS11_DRIVER_PATH = 213,
     **     GSK_IBMI_APPLICATION_ID = 6999,
     **                  /* Force enum size to 4 bytes - do not use this value */
     **     GSK_IBMI_BUF_FINAL = GSK_IBMI_4BYTE_VALUE
     **
     **   } GSK_BUF_ID;
     *****************************************************************
     D GSK_BUF_ID      S             10I 0
     D GSK_USER_DATA...
     D                 C                   CONST(200)
     D GSK_KEYRING_FILE...
     D                 C                   CONST(201)
     D GSK_KEYRING_PW...
     D                 C                   CONST(202)
     D GSK_KEYRING_LABEL...
     D                 C                   CONST(203)
     D GSK_KEYRING_STASH_FILE...
     D                 C                   CONST(204)
     D GSK_V2_CIPHER_SPECS...
     D                 C                   CONST(205)
     D GSK_V3_CIPHER_SPECS...
     D                 C                   CONST(206)
     D GSK_CONNECT_CIPHER_SPEC...
     D                 C                   CONST(207)
     D GSK_CONNECT_SEC_TYPE...
     D                 C                   CONST(208)
     D GSK_LDAP_SERVER...
     D                 C                   CONST(209)
     D GSK_LDAP_USER...
     D                 C                   CONST(210)
     D GSK_LDAP_USER_PW...
     D                 C                   CONST(211)
     D GSK_SID_VALUE...
     D                 C                   CONST(212)
     D GSK_PKCS11_DRIVER_PATH...
     D                 C                   CONST(213)
     D GSK_PKCS11_TOKEN_LABEL...
     D                 C                   CONST(214)
     D GSK_PKCS11_TOKEN_PWD...
     D                 C                   CONST(215)
     D GSK_CSP_NAME...
     D                 C                   CONST(216)
     D GSK_OCSP_URL...
     D                 C                   CONST(221)
     D GSK_OCSP_REQUEST_SIGKEYLABEL...
     D                 C                   CONST(222)
     D GSK_OCSP_PROXY_SERVER_NAME...
     D                 C                   CONST(223)
     D GSK_UNKNOWNREVOCATIONSTATUS_SUBJECT...
     D                 C                   CONST(224)
     D GSK_SSL_EXTN_SERVERNAME_REQUEST...
     D                 C                   CONST(230)
     D GSK_SSL_EXTN_SERVERNAME_CRITICAL_REQUEST...
     D                 C                   CONST(231)
     D GSK_SSL_EXTN_SERVERNAME_LIST...
     D                 C                   CONST(232)
     D GSK_SSL_EXTN_SERVERNAME_CRITICAL_LIST...
     D                 C                   CONST(233)
     D GSK_SSL_EXTN_SERVERNAME...
     D                 C                   CONST(234)
     D GSK_VALIDATIONFAIL_SUBJECT...
     D                 C                   CONST(235)
     D GSK_TLSV10_CIPHER_SPECS...
     D                 C                   CONST(236)
     D GSK_TLSV0_CIPHER_SPECS...
     D                 C                   CONST(236)
     D GSK_TLSV11_CIPHER_SPECS...
     D                 C                   CONST(237)
     D GSK_TLSV1_CIPHER_SPECS...
     D                 C                   CONST(237)
     D GSK_TLSV12_CIPHER_SPECS...
     D                 C                   CONST(238)
     D GSK_TLSV2_CIPHER_SPECS...
     D                 C                   CONST(238)
     D GSK_V3_CIPHER_SPECS_EX...
     D                 C                   CONST(240)
     D GSK_TLSV10_CIPHER_SPECS_EX...
     D                 C                   CONST(241)
     D GSK_TLSV11_CIPHER_SPECS_EX...
     D                 C                   CONST(242)
     D GSK_TLSV12_CIPHER_SPECS_EX...
     D                 C                   CONST(243)
     D GSK_CONNECT_CIPHER_SPEC_EX...
     D                 C                   CONST(244)
     D GSK_SSL_EXTN_SIGALG...
     D                 C                   CONST(245)
     D GSK_CONNECT_COMPRESSION...
     D                 C                   CONST(247)
     D GSK_UNKNOWNREVOCATIONSTATUS_SUBJECT_NOAIA...
     D                 C                   CONST(252)
     D GSK_IBMI_APPLICATION_ID...
     D                 C                   CONST(6999)

     *****************************************************************
     **   /** used for optional OCSP Request signing */                /* @A3A */
     **   typedef enum GSK_SIGALG_ID_T {                               /* @A3A */
     **      GSK_SIGALG_MD5_WITH_RSA = 1,                              /* @A3A */
     **      GSK_SIGALG_SHA1_WITH_RSA = 2                              /* @A3A */
     **   } GSK_SIGALG_ID_T;                                           /* @A3A */
     *****************************************************************
     D GSK_SIGALG_ID_T...
     D                 S             10i 0
     D GSK_SIGALG_MD5_WITH_RSA...
     D                 C                   CONST(1)
     D GSK_SIGALG_SHA1_WITH_RSA...
     D                 C                   CONST(2)

     *****************************************************************
     **   /** used for optional TLS CBC Protection */
     **   typedef enum GSK_TLS_CBCPROTECTION_METHOD_NUM_T {            /* @A3A */
     **      GSK_TLS_CBCPROTECTION_METHOD_NONE = 0,                    /* @A3A */
     **      GSK_TLS_CBCPROTECTION_METHOD_ZEROBYTEFRAGMENT = 1,        /* @A3A */
     **      GSK_TLS_CBCPROTECTION_METHOD_ONEBYTEFRAGMENT = 2,         /* @A3A */
     **      GSK_TLS_CBCPROTECTION_METHOD_DELAYEDONEBYTEFRAGMENT = 3   /* @A3A */
     **   } GSK_TLS_CBCPROTECTION_METHOD_NUM;                          /* @A3A */
     *****************************************************************
     D GSK_TLS_CBCPROTECTION_METHOD_NUM_T...
     D                 S             10i 0
     D GSK_TLS_CBCPROTECTION_METHOD_NONE...
     D                 C                   CONST(0)
     D GSK_TLS_CBCPROTECTION_METHOD_ZEROBYTEFRAGMENT...
     D                 C                   CONST(1)
     D GSK_TLS_CBCPROTECTION_METHOD_ONEBYTEFRAGMENT...
     D                 C                   CONST(2)
     D GSK_TLS_CBCPROTECTION_METHOD_DELAYEDONEBYTEFRAGMENT...
     D                 C                   CONST(3)


     *****************************************************************
     **   typedef enum GSK_NUM_ID_T
     **   {
     **     GSK_FD = 300,
     **     GSK_V2_SESSION_TIMEOUT = 301,
     **     GSK_V3_SESSION_TIMEOUT = 302,
     **     GSK_LDAP_SERVER_PORT = 303,
     **     GSK_V2_SIDCACHE_SIZE = 304,
     **     GSK_V3_SIDCACHE_SIZE = 305,
     **     GSK_CERTIFICATE_VALIDATION_CODE = 6996,
     **     GSK_HANDSHAKE_TIMEOUT = 6998,
     **                  /* Force enum size to 4 bytes - do not use this value */
     **     GSK_IBMI_NUM_FINAL = GSK_IBMI_4BYTE_VALUE
     **
     **   } GSK_NUM_ID;
     *****************************************************************
     D GSK_NUM_ID      S             10I 0
     D GSK_FD...
     D                 C                   CONST(300)
     D GSK_V2_SESSION_TIMEOUT...
     D                 C                   CONST(301)
     D GSK_V3_SESSION_TIMEOUT...
     D                 C                   CONST(302)
     D GSK_LDAP_SERVER_PORT...
     D                 C                   CONST(303)
     D GSK_V2_SIDCACHE_SIZE...
     D                 C                   CONST(304)
     D GSK_V3_SIDCACHE_SIZE...
     D                 C                   CONST(305)
     D GSK_LDAP_SERVER_INDEX...
     D                 C                   CONST(306)
     D GSK_LDAP_FAILOVER_RECONNECTION_PERIOD...
     D                 C                   CONST(307)
     D GSK_CRL_CACHE_ENTRY_LIFETIME...
     D                 C                   CONST(308)
     D GSK_CRL_CACHE_SIZE...
     D                 C                   CONST(309)
     D GSK_LAST_VALIDATION_ERROR...
     D                 C                   CONST(311)
     D GSK_OCSP_PROXY_SERVER_PORT...
     D                 C                   CONST(312)
     D GSK_OCSP_REQUEST_SIGALG...
     D                 C                   CONST(313)
     D GSK_OCSP_MAX_RESPONSE_SIZE...
     D                 C                   CONST(315)
     D GSK_OCSP_TIMEOUT...
     D                 C                   CONST(318)
     D GSK_SSL_EXTN_MAXFRAGMENT_SIZE...
     D                 C                   CONST(321)
     D GSK_OCSP_NONCE_SIZE...
     D                 C                   CONST(324)
     D GSK_OCSP_CLIENT_CACHE_SIZE...
     D                 C                   CONST(326)
     D GSK_TLS_CBCPROTECTION_METHOD...
     D                 C                   CONST(329)
     D GSK_IBMI_READ_TIMEOUT...
     D                 C                   CONST(6993)
     D GSK_CERTIFICATE_VALIDATION_CODE...
     D                 C                   CONST(6996)
     D GSK_HANDSHAKE_TIMEOUT...
     D                 C                   CONST(6998)


     *****************************************************************
     **   typedef enum GSK_ENUM_ID_T
     **   {
     **     GSK_CLIENT_AUTH_TYPE = 401,
     **     GSK_SESSION_TYPE = 402,
     **     GSK_PROTOCOL_SSLV2 = 403,
     **     GSK_PROTOCOL_SSLV3 = 404,
     **     GSK_PROTOCOL_USED = 405,
     **     GSK_SID_FIRST = 406,
     **     GSK_PROTOCOL_TLSV1 = 407,
     **     GSK_ACCELERATOR_RAINBOW_CS = 408,
     **     GSK_ACCELERATOR_NCIPHER_NF = 409,
     **     GSK_SERVER_AUTH_TYPE = 410,
     **     GSK_ENVIRONMENT_CLOSE_OPTIONS = 411,
     **     GSK_LDAP_REQUIRED_AT_INIT = 412,
     **     GSK_AES_SUPPORT = 413,
     **   /*GSK_T61_AS_LATIN1=414,
     **   /*GSK_FIPS_MODE_PROCESSING=415,
     **   /*GSK_BASE_CRYPTO_LIBRARY=416,
     **   /*GSK_PKCS11_ACCELERATOR_MODE=417,
     **   /*GSK_CC_MODE_CONTROL=418,
     **   /*GSK_RESTRICTED_PROCESSING_OPTION=419,
     **   /*GSK_SSL_FIPS_MODE_PROCESSING=420,
     **   /*GSK_ICC_FIPS_MODE_PROCESSING=421,
     **   /*GSK_PKIX_CERT_VALIDATION_MODE=422,
     **     GSK_ALLOW_UNAUTHENTICATED_RESUME=423,
     **   /*GSK_USE_SOC_MUTEX=424,
     **   /*GSK_USE_SESSION_PROTECTION_IO=425,
     **     GSK_OCSP_ENABLE=426,
     **     GSK_OCSP_NONCE_CHECK_ENABLE=427,
     **     GSK_OCSP_NONCE_GENERATION_ENABLE=428,
     **   /*GSK_URI_CDP_DISABLE=429,
     **   /*GSK_VALIDATE_EXTENDEDKEYUSAGE_ENABLE=430,
     **   /*GSK_PKCS11_ONLY_TRUSTED=431,
     **   /*GSK_ALLOW_NONCRITICALBASICCONSTRAINT=432,
     **   /*GSK_NIST_DES_FIPS_DEPRECATION=433,
     **   /*GSK_PKCS11_RSAPADDING_PROTECTION_ENABLE=434,
     **     GSK_OCSP_RETRIEVE_VIA_GET=435,
     **     GSK_PROTOCOL_TLSV10 = 436,     /* SUPPORTED */
     **     GSK_PROTOCOL_TLSV11 = 437,     /* SUPPORTED */
     **     GSK_PROTOCOL_TLSV12 = 438,     /* SUPPORTED */
     **   /*GSK_SSLV2HELLO_ENABLE = 439,
     **   /*GSK_SSL_EXTN_CERTSTATUSREQ_ENABLE = 440,
     **   /*GSK_BINARY_DN_MATCHING_ENABLE=441,
     **     GSK_NO_RENEGOTIATION=442,
     **   /*GSK_ALLOW_ABBREVIATED_RENEGOTIATION=443,
     **   /*GSK_DEFLATE_ENABLE=444,
     **   /*GSK_DEFLATE_DISABLE=445,
     **   /*GSK_ALLOW_ANY_RENEGOTIATION=446,
     **   /*GSK_ALLOW_ONLY_EXTENDED_RENEGOTIATION=447,
     **   /*GSK_EXTENDED_RENEGOTIATION_INDICATION_ENABLE=448,
     **   /*GSK_EXTENDED_RENEGOTIATION_INDICATION_SCSV=449,
     **   /*GSK_EXTENDED_RENEGOTIATION_INDICATION_RIEXT=450,
     **     GSK_EXTENDED_RENEGOTIATION_CRITICAL_CLIENT=451,
     **     GSK_EXTENDED_RENEGOTIATION_CRITICAL_SERVER=452,
     **   /*GSK_RENEGOTIATION_PEER_IDENTITY_CHECK=453,
     **   /*GSK_SSL_SUITEB_MODE_PROCESSING=454,
     **   /*GSK_SSL_SUITEB_128BIT_MODE_PROCESSING=455,
     **   /*GSK_SSL_SUITEB_192BIT_MODE_PROCESSING=456,
     **     GSK_CERTREQ_DNLIST_ENABLE=457,
     **   /*GSK_CRYPTOTEST_ENABLE=458,
     **   /*GSK_MSCNG_ENABLE=459,
     **   /*GSK_MSCNG_SMARTCARD_SELECT=460,
     **   /*GSK_MSCAPI_ENABLE=461
     **                  /* Force enum size to 4 bytes - do not use this value */
     **     GSK_IBMI_ENUM_FINAL = GSK_IBMI_4BYTE_VALUE
     **
     **   } GSK_ENUM_ID ;
     *****************************************************************
     D GSK_ENUM_ID     S             10I 0
     D GSK_CLIENT_AUTH_TYPE...
     D                 C                   CONST(401)
     D GSK_SESSION_TYPE...
     D                 C                   CONST(402)
     D GSK_PROTOCOL_SSLV2...
     D                 C                   CONST(403)
     D GSK_PROTOCOL_SSLV3...
     D                 C                   CONST(404)
     D GSK_PROTOCOL_USED...
     D                 C                   CONST(405)
     D GSK_SID_FIRST...
     D                 C                   CONST(406)
     D GSK_PROTOCOL_TLSV1...
     D                 C                   CONST(407)
     D GSK_SERVER_AUTH_TYPE...
     D                 C                   CONST(410)
     D GSK_ENVIRONMENT_CLOSE_OPTIONS...
     D                 C                   CONST(411)
     D GSK_LDAP_REQUIRED_AT_INIT...
     D                 C                   CONST(412)
     D GSK_AES_SUPPORT...
     D                 C                   CONST(413)
     D GSK_ALLOW_UNAUTHENTICATED_RESUME...
     D                 C                   CONST(423)
     D GSK_OCSP_ENABLE...
     D                 C                   CONST(426)
     D GSK_OCSP_NONCE_CHECK_ENABLE...
     D                 C                   CONST(427)
     D GSK_OCSP_NONCE_GENERATION_ENABLE...
     D                 C                   CONST(428)
     D GSK_OCSP_RETRIEVE_VIA_GET...
     D                 C                   CONST(435)
     D GSK_PROTOCOL_TLSV10...
     D                 C                   CONST(436)
     D GSK_PROTOCOL_TLSV11...
     D                 C                   CONST(437)
     D GSK_PROTOCOL_TLSV12...
     D                 C                   CONST(438)
     D GSK_PROTOCOL_TLSV13...
     D                 C                   CONST(4030)
     D GSK_NO_RENEGOTIATION...
     D                 C                   CONST(442)
     D GSK_EXTENDED_RENEGOTIATION_CRITICAL_CLIENT...
     D                 C                   CONST(451)
     D GSK_EXTENDED_RENEGOTIATION_CRITICAL_SERVER...
     D                 C                   CONST(452)
     D GSK_CERTREQ_DNLIST_ENABLE...
     D                 C                   CONST(457)


     *****************************************************************
     **
     **   typedef enum GSK_ENUM_VALUE_T
     **   {
     **     GSK_NULL = 500,                         /* Use for initial value   */
     **     GSK_CLIENT_AUTH_FULL = 503,             /* GSK_CLIENT_AUTH_TYPE    */
     **     GSK_CLIENT_AUTH_PASSTHRU = 505,         /* GSK_CLIENT_AUTH_TYPE    */
     **     GSK_CLIENT_SESSION = 507,               /* GSK_SESSION_TYPE        */
     **     GSK_SERVER_SESSION = 508,               /* GSK_SESSION_TYPE        */
     **     GSK_SERVER_SESSION_WITH_CL_AUTH = 509,  /* GSK_SESSION_TYPE        */
     **     GSK_PROTOCOL_SSLV2_ON = 510,            /* GSK_PROTOCOL_SSLV2      */
     **     GSK_PROTOCOL_SSLV2_OFF = 511,           /* GSK_PROTOCOL_SSLV2      */
     **     GSK_PROTOCOL_SSLV3_ON = 512,            /* GSK_PROTOCOL_SSLV3      */
     **     GSK_PROTOCOL_SSLV3_OFF = 513,           /* GSK_PROTOCOL_SSLV3      */
     **     GSK_PROTOCOL_USED_SSLV2 = 514,          /* GSK_PROTOCOL_USED       */
     **     GSK_PROTOCOL_USED_SSLV3 = 515,          /* GSK_PROTOCOL_USED       */
     **     GSK_SID_IS_FIRST = 516,                 /* GSK_SID_FIRST           */
     **     GSK_SID_NOT_FIRST = 517,                /* GSK_SID_FIRST           */
     **     GSK_PROTOCOL_TLSV1_ON = 518,            /* GSK_PROTOCOL_TLSV1      */
     **     GSK_PROTOCOL_TLSV1_OFF = 519,           /* GSK_PROTOCOL_TLSV1      */
     **     GSK_PROTOCOL_USED_TLSV1 = 520,          /* GSK_PROTOCOL_USED (get) */
     **     GSK_IBMI_CLIENT_AUTH_REQUIRED = 6995,  /* GSK_CLIENT_AUTH_TYPE     */
     **                  /* Force enum size to 4 bytes - do not use this value */
     **     GSK_IBMI_ENUM_VALUE_FINAL = GSK_IBMI_4BYTE_VALUE
     **
     **   } GSK_ENUM_VALUE ;
     *****************************************************************
     D GSK_ENUM_VALUE  S             10I 0
     D GSK_FALSE...
     D                 C                   CONST(0)
     D GSK_TRUE...
     D                 C                   CONST(1)
     D GSK_NULL...
     D                 C                   CONST(500)
     D GSK_CLIENT_AUTH_FULL...
     D                 C                   CONST(503)
     D GSK_CLIENT_AUTH_PASSTHRU...
     D                 C                   CONST(505)
     D GSK_CLIENT_SESSION...
     D                 C                   CONST(507)
     D GSK_SERVER_SESSION...
     D                 C                   CONST(508)
     D GSK_SERVER_SESSION_WITH_CL_AUTH...
     D                 C                   CONST(509)
     D GSK_PROTOCOL_SSLV2_ON...
     D                 C                   CONST(510)
     D GSK_PROTOCOL_SSLV2_OFF...
     D                 C                   CONST(511)
     D GSK_PROTOCOL_SSLV3_ON...
     D                 C                   CONST(512)
     D GSK_PROTOCOL_SSLV3_OFF...
     D                 C                   CONST(513)
     D GSK_PROTOCOL_USED_SSLV2...
     D                 C                   CONST(514)
     D GSK_PROTOCOL_USED_SSLV3...
     D                 C                   CONST(515)
     D GSK_SID_IS_FIRST...
     D                 C                   CONST(516)
     D GSK_SID_NOT_FIRST...
     D                 C                   CONST(517)
     D GSK_PROTOCOL_TLSV1_ON...
     D                 C                   CONST(518)
     D GSK_PROTOCOL_TLSV1_OFF...
     D                 C                   CONST(519)
     D GSK_PROTOCOL_USED_TLSV1...
     D                 C                   CONST(520)
     D GSK_SERVER_AUTH_FULL...
     D                 C                   CONST(534)
     D GSK_SERVER_AUTH_PASSTHRU...
     D                 C                   CONST(535)
     D GSK_DELAYED_ENVIRONMENT_CLOSE...
     D                 C                   CONST(536)
     D GSK_NORMAL_ENVIRONMENT_CLOSE...
     D                 C                   CONST(537)
     D GSK_INIT_CRL_LDAP_REQUIRED_ON...
     D                 C                   CONST(538)
     D GSK_INIT_CRL_LDAP_REQUIRED_OFF...
     D                 C                   CONST(539)
     D GSK_AES_SUPPORT_ON...
     D                 C                   CONST(540)
     D GSK_AES_SUPPORT_OFF...
     D                 C                   CONST(541)
     D GSK_ALLOW_UNAUTHENTICATED_RESUME_ON...
     D                 C                   CONST(588)
     D GSK_ALLOW_UNAUTHENTICATED_RESUME_OFF...
     D                 C                   CONST(589)
     D GSK_SERVER_SESSION_WITH_CL_AUTH_CRITICAL...
     D                 C                   CONST(594)
     D GSK_PROTOCOL_USED_TLSV11...
     D                 C                   CONST(595)
     D GSK_PROTOCOL_USED_TLSV12...
     D                 C                   CONST(596)
     D GSK_PROTOCOL_USED_TLSV13...
     D                 C                   CONST(5000)
     D GSK_IBMI_SERVER_AUTH_REQUIRED...
     D                 C                   CONST(6994)
     D GSK_IBMI_CLIENT_AUTH_REQUIRED...
     D                 C                   CONST(6995)

     *****************************************************************
     **   /* The following enumerated type is the identifier for the data type
     **      of the elements of the array of information in the gsk_cert_data
     **      structure. Note that depending on the specific certificate, some
     **      data types may not be present. */
     **   typedef enum GSK_CERT_DATA_ID_T
     **   {
     **     CERT_BODY_DER = 600,     /* complete certificate body, der format */
     **     CERT_BODY_BASE64 = 601,  /* complete certificate body, base 64    */
     **     CERT_SERIAL_NUMBER = 602,
     **     CERT_COMMON_NAME = 610,
     **     CERT_LOCALITY = 611,
     **     CERT_STATE_OR_PROVINCE = 612,
     **     CERT_COUNTRY = 613,
     **     CERT_ORG = 614,
     **     CERT_ORG_UNIT = 615,
     **     CERT_DN_PRINTABLE = 616,
     **     CERT_DN_DER = 617,
     **     CERT_POSTAL_CODE = 618,
     **     CERT_EMAIL = 619,
     **     CERT_ISSUER_COMMON_NAME = 650,
     **     CERT_ISSUER_LOCALITY = 651,
     **     CERT_ISSUER_STATE_OR_PROVINCE = 652,
     **     CERT_ISSUER_COUNTRY = 653,
     **     CERT_ISSUER_ORG = 654,
     **     CERT_ISSUER_ORG_UNIT = 655,
     **     CERT_ISSUER_DN_PRINTABLE = 656,
     **     CERT_ISSUER_DN_DER = 657,
     **     CERT_ISSUER_POSTAL_CODE = 658,
     **     CERT_ISSUER_EMAIL = 659,
     **                  /* Force enum size to 4 bytes - do not use this value */
     **     GSK_IBMI_CERT_DATA_FINAL = GSK_IBMI_4BYTE_VALUE
     **
     **
     **   } GSK_CERT_DATA_ID;
     *****************************************************************
     D GSK_CERT_DATA_ID...
     D                 S             10I 0
     D CERT_BODY_DER...
     D                 C                   CONST(600)
     D CERT_BODY_BASE64...
     D                 C                   CONST(601)
     D CERT_SERIAL_NUMBER...
     D                 C                   CONST(602)
     D CERT_COMMON_NAME...
     D                 C                   CONST(610)
     D CERT_LOCALITY...
     D                 C                   CONST(611)
     D CERT_STATE_OR_PROVINCE...
     D                 C                   CONST(612)
     D CERT_COUNTRY...
     D                 C                   CONST(613)
     D CERT_ORG...
     D                 C                   CONST(614)
     D CERT_ORG_UNIT...
     D                 C                   CONST(615)
     D CERT_DN_PRINTABLE...
     D                 C                   CONST(616)
     D CERT_DN_DER...
     D                 C                   CONST(617)
     D CERT_POSTAL_CODE...
     D                 C                   CONST(618)
     D CERT_EMAIL...
     D                 C                   CONST(619)
     D CERT_ISSUER_COMMON_NAME...
     D                 C                   CONST(650)
     D CERT_ISSUER_LOCALITY...
     D                 C                   CONST(651)
     D CERT_ISSUER_STATE_OR_PROVINCE...
     D                 C                   CONST(652)
     D CERT_ISSUER_COUNTRY...
     D                 C                   CONST(653)
     D CERT_ISSUER_ORG...
     D                 C                   CONST(654)
     D CERT_ISSUER_ORG_UNIT...
     D                 C                   CONST(655)
     D CERT_ISSUER_DN_PRINTABLE...
     D                 C                   CONST(656)
     D CERT_ISSUER_DN_DER...
     D                 C                   CONST(657)
     D CERT_ISSUER_POSTAL_CODE...
     D                 C                   CONST(658)
     D CERT_ISSUER_EMAIL...
     D                 C                   CONST(659)
     D CERT_VERSION...
     D                 C                   CONST(660)
     D CERT_SIGNATURE_ALGORITHM...
     D                 C                   CONST(661)
     D CERT_VALID_FROM...
     D                 C                   CONST(662)
     D CERT_VALID_TO...
     D                 C                   CONST(663)
     D CERT_PUBLIC_KEY_ALGORITHM...
     D                 C                   CONST(664)
     D CERT_PUBLIC_KEY...
     D                 C                   CONST(665)
     D CERT_PUBLIC_KEY_SIZE...
     D                 C                   CONST(666)
     D CERT_FINGERPRINT_ALGORITHM...
     D                 C                   CONST(667)
     D CERT_FINGERPRINT...
     D                 C                   CONST(668)
     D CERT_ISSUER_UNIQUEID...
     D                 C                   CONST(669)
     D CERT_SUBJECT_UNIQUEID...
     D                 C                   CONST(670)
     D CERT_KEY_USAGE...
     D                 C                   CONST(671)
     D CERT_SUBJECT_ALTERNATIVE_NAME_RFC822NAME...
     D                 C                   CONST(672)
     D CERT_SUBJECT_ALTERNATIVE_NAME_DNSNAME...
     D                 C                   CONST(673)
     D CERT_SUBJECT_ALTERNATIVE_NAME_DIRECTORYNAME...
     D                 C                   CONST(674)
     D CERT_SUBJECT_ALTERNATIVE_NAME_URI...
     D                 C                   CONST(675)
     D CERT_SUBJECT_ALTERNATIVE_NAME_IPADDRESS...
     D                 C                   CONST(676)
     D CERT_CERTIFICATE_POLICY_POLICYIDENTIFIER...
     D                 C                   CONST(677)
     D CERT_BASIC_CONSTRAINTS_CA...
     D                 C                   CONST(678)
     D CERT_BASIC_CONSTRAINTS_PATH_LENGTH_CONSTRAINT...
     D                 C                   CONST(679)
     D CERT_CRL_DISTRIBUTION_POINTS_DISTRIBUTIONPOINTNAME...
     D                 C                   CONST(680)
     D CERT_VALID_FROM_EX...
     D                 C                   CONST(681)
     D CERT_VALID_TO_EX...
     D                 C                   CONST(682)


     *****************************************************************
     **   typedef enum GSK_CALLBACK_ID_T
     **   {
     **     GSK_IO_CALLBACK = 800,
     **     GSK_SID_CACHE_CALLBACK = 801,
     **     GSK_CLIENT_CERT_CALLBACK = 802,
     **     GSK_PKCS11_CALLBACK = 803,        /* Smart card */
     **     GSK_ENVIRONMENT_CLOSE_CALLBACK = 804,
     **     GSK_CERT_VALIDATION_CALLBACK = 805,
     **   } GSK_CALLBACK_ID;
     *****************************************************************
     D GSK_IO_CALLBACK...
     D                 c                   800
     D GSK_SIO_CACHE_CALLBACK...
     D                 c                   801
     D GSK_CLIENT_CERT_CALLBACK...
     D                 c                   802
     D GSK_PKCS11_CALLBACK...
     D                 c                   803
     D GSK_ENVIRONMENT_CLOSE_CALLBACK...
     D                 c                   804
     D GSK_CERT_VALIDATION_CALLBACK...
     D                 c                   805


     *****************************************************************
     ** The following structure defines the entry points to routines that
     **  replace the default read, write, and getpeetid routines.
     **
     **   typedef enum GSK_SOCKET_OPTION_COMMANDS_T
     **   {
     **     GSK_SET_SOCKET_STATE_FOR_HANDSHAKE = 900,
     **     GSK_SET_SOCKET_STATE_FOR_READ_WRITE = 901,
     **    /* Force enum size to 4 bytes - do not use this value */
     **     GSK_IBMI_SOCKET_OPTION_FINAL = GSK_IBMI_4BYTE_VALUE
     **   } GSK_SOCKET_OPTION_COMMANDS;
     **
     **   typedef struct iocallback_struct {
     **   int (* io_read)(int fd, void* data, int len, char * user_data);
     **   int (* io_write)(int fd, void* data, int len, char * user_data);
     **   unsigned long (* io_getpeerid)(int fd, char * user_data);
     **   int (* io_setsocketoptions) (int fd, int cmd, char * future);
     **   int (* io_rsvd2) (int fut2);  /*Future use - set to NULL*/
     **   int (* io_rsvd1) (int fut1);  /*Future use - set to NULL*/
     **   } iocallback;
     *****************************************************************
     D GSK_SOCKET_OPTIONS_COMMANDS_T...
     D                 s             10i 0
     D GSK_SET_SOCKET_STATE_FOR_HANDSHAKE...
     D                 c                   900
     D GSK_SET_SOCKET_STATE_FOR_READ_WRITE...
     D                 c                   901

     D iocallback      ds                  qualified
     D   io_read                       *   procptr inz(*null)
     D   io_write                      *   procptr inz(*null)
     D   io_getpeerid                  *   procptr inz(*null)
     D   io_setsocketoptions...
     D                                 *   procptr inz(*null)
     D   io_rsvd2                      *   procptr inz(*null)
     D   io_rsvd1                      *   procptr inz(*null)


     *****************************************************************
     **   typedef struct gsk_cert_data_elem_t
     **   {
     **     GSK_CERT_DATA_ID cert_data_id;  /* identifer of each data type */
     **     char *cert_data_p;  /* pointer to data */
     **     int cert_data_l;  /* length of data (not including trailing null) */
     **
     **   } gsk_cert_data_elem;
     *****************************************************************
     D p_gsk_cert_data_elem...
     D                 S               *
     D gsk_cert_data_elem...
     D                 DS                  ALIGN
     D                                     BASED(p_gsk_cert_data_elem)
     D   cert_data_id                      like(GSK_CERT_DATA_ID)
     D   cert_data_p                   *
     D   cert_data_l                 10I 0
     D   cert_padding                12A

     *****************************************************************
     **   typedef enum GSK_CERT_ID_T
     **   {
     **     GSK_PARTNER_CERT_INFO = 700,
     **     GSK_LOCAL_CERT_INFO = 701,
     **                  /* Force enum size to 4 bytes - do not use this value */
     **     GSK_IBMI_CERT_FINAL = GSK_IBMI_4BYTE_VALUE
     **
     **   } GSK_CERT_ID ;
     *****************************************************************
     D GSK_CERT_ID     S             10I 0
     D GSK_PARTNER_CERT_INFO...
     D                 C                   CONST(700)
     D GSK_LOCAL_CERT_INFO...
     D                 C                   CONST(701)

      **---------------------------------------------------------------------
      **
      **   int gsk_attribute_get_enum(gsk_handle my_gsk_handle,
      **                          GSK_ENUM_ID enumID,
      **                          GSK_ENUM_VALUE *enumValue);
      **
      **---------------------------------------------------------------------
     D gsk_attribute_get_enum...
     D                 PR            10I 0 extproc('gsk_attribute_get_enum')
     D  my_gsk_handle                      like(gsk_handle) value
     D  enumID                             like(GSK_ENUM_ID) value
     D  enumValue                          like(GSK_ENUM_VALUE)


      **---------------------------------------------------------------------
      **
      **    int gsk_attribute_get_numeric_value(gsk_handle my_gsk_handle,
      **                                   GSK_NUM_ID numID,
      **                                   int *numValue);
      **
      **---------------------------------------------------------------------
     D gsk_attribute_get_numeric_value...
     D                 PR            10I 0 extproc('gsk_attribute_get_+
     D                                     numeric_value')
     D  my_gsk_handle                      like(gsk_handle) value
     D  numID                              like(GSK_NUM_ID) value
     D  numValue                     10I 0


      **---------------------------------------------------------------------
      **
      **   int gsk_attribute_get_buffer(gsk_handle my_gsk_handle,
      **                            GSK_BUF_ID bufID,
      **                            const char **buffer,
      **                            int *bufSize);
      **
      **---------------------------------------------------------------------
     D gsk_attribute_get_buffer...
     D                 PR            10I 0 extproc('gsk_attribute_get_buffer')
     D  my_gsk_handle                      like(gsk_handle) value
     D  bufID                              like(GSK_BUF_ID) value
     D  buffer                         *   value
     D  bufSize                      10I 0


      **---------------------------------------------------------------------
      **
      **  int gsk_attribute_get_cert_info(gsk_handle my_gsk_handle,
      **                  GSK_CERT_ID certID,
      **                  const gsk_cert_data_elem **certDataElem,
      **                  int *certDataElemCount);
      **
      **---------------------------------------------------------------------
     D gsk_attribute_get_cert_info...
     D                 PR            10I 0 extproc('gsk_attribute_get_cert_+
     d                                     info')
     D  my_gsk_handle                      like(gsk_handle) value
     D  certID                             like(GSK_CERT_ID) value
     D  certDataElem                   *
     D  certDataElemCount...
     D                               10I 0


      **---------------------------------------------------------------------
      **
      **   int gsk_attribute_set_buffer(gsk_handle my_gsk_handle,
      **                            GSK_BUF_ID bufID,
      **                            const char *buffer,
      **                            int bufSize);
      **
      **---------------------------------------------------------------------
     D gsk_attribute_set_buffer...
     D                 PR            10I 0 extproc('gsk_attribute_set_buffer')
     D  my_gsk_handle                      like(gsk_handle) value
     D  bufID                              like(GSK_BUF_ID) value
     D  buffer                         *   value options(*string)
     D  bufSize                      10I 0 value


      **---------------------------------------------------------------------
      **
      **  int gsk_attribute_set_enum(gsk_handle my_gsk_handle,
      **                          GSK_ENUM_ID enumID,
      **                          GSK_ENUM_VALUE enumValue);
      **---------------------------------------------------------------------
     D gsk_attribute_set_enum...
     D                 PR            10I 0 extproc('gsk_attribute_set_enum')
     D  my_gsk_handle                      like(gsk_handle) value
     D  enumID                             like(GSK_ENUM_ID) value
     D  enumValue                          like(GSK_ENUM_VALUE) value


      **---------------------------------------------------------------------
      **
      **  int gsk_attribute_set_numeric_value(gsk_handle my_gsk_handle,
      **                                    GSK_NUM_ID numID,
      **                                    int numValue);
      **---------------------------------------------------------------------
     D gsk_attribute_set_numeric_value...
     D                 PR            10I 0 extproc('gsk_attribute_set_+
     D                                     numeric_value')
     D  my_gsk_handle                      like(gsk_handle) value
     D  numID                              like(GSK_NUM_ID) value
     D  numValue                     10I 0 value


      **---------------------------------------------------------------------
      **
      **  int gsk_environment_close(gsk_handle *my_env_handle)
      **
      **---------------------------------------------------------------------
     D gsk_environment_close...
     D                 PR            10I 0 extproc('gsk_environment_close')
     D  my_env_handle                      like(gsk_handle)


      **---------------------------------------------------------------------
      **
      **  int gsk_environment_init(gsk_handle my_env_handle)
      **
      **---------------------------------------------------------------------
     D gsk_environment_init...
     D                 PR            10I 0 extproc('gsk_environment_init')
     D  my_env_handle                      like(gsk_handle) value


      **---------------------------------------------------------------------
      **  int gsk_environment_open(gsk_handle *my_env_handle)
      **
      **     creates a new GSKit Enviorment.  (This is the first API
      **     you need to call)
      **
      **---------------------------------------------------------------------
     D gsk_environment_open...
     D                 PR            10I 0 extproc('gsk_environment_open')
     D  my_env_handle                      like(gsk_handle)


      **---------------------------------------------------------------------
      **
      **  int gsk_secure_soc_close(gsk_handle *my_session_handle);
      **
      **---------------------------------------------------------------------
     D gsk_secure_soc_close...
     D                 PR            10I 0 extproc('gsk_secure_soc_close')
     D  my_ssn_handle                      like(gsk_handle)


      **---------------------------------------------------------------------
      **
      **  int gsk_secure_soc_init(gsk_handle my_session_handle);
      **
      **---------------------------------------------------------------------
     D gsk_secure_soc_init...
     D                 PR            10I 0 extproc('gsk_secure_soc_init')
     D  my_ssn_handle                      like(gsk_handle) value


      **---------------------------------------------------------------------
      **
      **  int gsk_secure_soc_startInit(gsk_handle,
      **                               int,
      **                               Qso_OverlappedIO_t *);
      **
      **---------------------------------------------------------------------
     D gsk_secure_soc_startInit...
     D                 PR            10I 0 extproc('gsk_secure_soc_startInit')
     D  my_ssn_handle                      like(gsk_handle) value
     D  IOComplPort                  10I 0 value
     D  communArea                     *   value


      **---------------------------------------------------------------------
      **
      **  int gsk_secure_soc_misc(gsk_handle my_session_handle,
      **                          GSK_MISC_ID miscID);
      **
      **---------------------------------------------------------------------
     D gsk_secure_soc_misc...
     D                 PR            10I 0 extproc('gsk_secure_soc_misc')
     D  my_ssn_handle                      like(gsk_handle) value
     D  miscID                             like(GSK_MISC_ID) value


      **---------------------------------------------------------------------
      **
      **  int gsk_secure_soc_open(gsk_handle my_env_handle,
      **                        gsk_handle *my_session_handle);
      **
      **---------------------------------------------------------------------
     D gsk_secure_soc_open...
     D                 PR            10I 0 extproc('gsk_secure_soc_open')
     D  my_env_handle                      like(gsk_handle) value
     D  my_ssn_handle                      like(gsk_handle)


      **---------------------------------------------------------------------
      **
      **  int gsk_secure_soc_read(gsk_handle my_session_handle,
      **                        char *readBuffer,
      **                        int readBufSize,
      **                        int *amtRead);
      **
      **---------------------------------------------------------------------
     D gsk_secure_soc_read...
     D                 PR            10I 0 extproc('gsk_secure_soc_read')
     D  my_ssn_handle                      like(gsk_handle) value
     D  readBuffer                     *   value
     D  readBufSize                  10I 0 value
     D  amtRead                      10I 0


      **---------------------------------------------------------------------
      **
      **  int gsk_secure_soc_startRecv (gsk_handle my_session_handle,
      **              int IOCompletionPort,
      **              Qso_OverlappedIO_t *communicationsArea)
      **
      **---------------------------------------------------------------------
     D gsk_secure_soc_startRecv...
     D                 PR            10I 0 extproc('gsk_secure_soc_startRecv')
     D  my_ssn_handle                      like(gsk_handle) value
     D  IOComplPort                  10I 0 value
     D  communArea                     *   value


      **---------------------------------------------------------------------
      **
      **  int gsk_secure_soc_write(gsk_handle my_session_handle,
      **                        char *writeBuffer,
      **                        int writeBufSize,
      **                        int *amtWritten);
      **
      **---------------------------------------------------------------------
     D gsk_secure_soc_write...
     D                 PR            10I 0 extproc('gsk_secure_soc_write')
     D  my_ssn_handle                      like(gsk_handle) value
     D  writeBuffer                    *   value
     D  writeBufSize                 10I 0 value
     D  amtWritten                   10I 0


      **---------------------------------------------------------------------
      **
      **  int gsk_secure_soc_startSend (gsk_handle my_session_handle,
      **              int IOCompletionPort,
      **              Qso_OverlappedIO_t *communicationsArea)
      **
      **---------------------------------------------------------------------
     D gsk_secure_soc_startSend...
     D                 PR            10I 0 extproc('gsk_secure_soc_startSend')
     D  my_ssn_handle                      like(gsk_handle) value
     D  IOComplPort                  10I 0 value
     D  communArea                     *   value


      **---------------------------------------------------------------------
      **
      **  const char *gsk_strerror(int gsk_return_value);
      **
      **  This does not exist in V4R5.
      **---------------------------------------------------------------------
     d gsk_strerror    PR              *   extproc('gsk_strerror')
     d  gsk_ret_value                10I 0 value


      **---------------------------------------------------------------------
      **  typedef enum VALIDATE_REQUIRED_T
      **  {
      **      GSK_NO_VALIDATION = 900,
      **      GSK_VALIDATION_REQUIRED,
      **  } VALIDATE_REQUIRED;
      **---------------------------------------------------------------------
     D GSK_NO_VALIDATION...
     D                 C                   900
     D GSK_VALIDATION_REQUIRED...
     D                 C                   901

      **---------------------------------------------------------------------
      **  typedef enum CERT_NEEDED_T
      **  {
      **      GSK_CERTIFICATE_CHAIN_SENT_VIA_SSL = 950,
      **      GSK_COMPLETED_CERTIFICATE_CHAIN,
      **      GSK_END_ENTITY_CERTIFICATE,
      **  } CERT_NEEDED;
      **---------------------------------------------------------------------
     D GSK_CERTIFICATE_CHAIN_SENT_VIA_SSL...
     D                 C                   950
     D GSK_COMPLETED_CERTIFICATE_CHAIN...
     D                 C                   951
     D GSK_END_ENTITY_CERTIFICATE...
     D                 C                   952

      **---------------------------------------------------------------------
      **  typedef enum GSK_DATA_ID_T {
      **     GSK_DATA_ID_SUPPORTED_KEYS = 720,
      **     GSK_DATA_ID_SERVER_ISSUERS = 721,
      **     GSK_IBMI_DATA_FINAL = GSK_IBMI_4BYTE_VALUE
      **  } GSK_DATA_ID;
      **---------------------------------------------------------------------
     D GSK_DATA_ID_T...
     D                 s             10i 0
     D GSK_DATA_ID_SUPPORTED_KEYS...
     D                 C                   const(720)
     D GSK_DATA_ID_SERVER_ISSUERS...
     D                 C                   const(721)

      **---------------------------------------------------------------------
      *   typedef struct validationCallBack_struct
      *   {
      *       int ( *validation_callback)
      *                                 ( const unsigned char *,int );
      *       VALIDATE_REQUIRED validateRequired;
      *       CERT_NEEDED certificateNeeded;
      *   } validationCallBack;
      *
      *  The callback receives two parms:
      *       const unsigned char *my_Certificate_Chain;i
      *           -- pointer to the certificate chain
      *       int my_validation_status
      *           -- GSKit's analysis of validation, can be
      *                  GSK_VALIDATION_SUCCESSFUL
      *                  GSK_IBMI_ERROR_NOT_TRUSTED_ROOT
      *                  GSK_KEYFILE_CERT_EXPIRED
      *
      *  The callback should return GSK_OK to accept the cert
      *  or GSK_ERROR_CERT_VALIDATION to reject it.
      *
      * Note: CertCallback_t is the same structure, but with shorter
      *       names.  (Sorry, but IBM's names are just too long!!)
      **---------------------------------------------------------------------
     D validationCallBack_struct...
     D                 ds                  based(p_validationStruct)
     D   validation_callback...
     D                                 *   procptr
     D   validateRequired...
     D                               10i 0
     D   certificateNeeded...
     D                               10i 0

     D CertCallback_t...
     D                 ds                  based(p_certCallback)
     D   vc_proc                       *   procptr
     D   vc_valreq                   10i 0
     D   vc_certneed                 10i 0

      **---------------------------------------------------------------------
      **  gsk_attribute_set_callback
      **
      **    int gsk_attribute_set_callback(gsk_handle my_ssn_handle,
      **                                   GSK_CALLBACK_ID callBackID,
      **                                   void *callBackAreaPtr);
      **
      **---------------------------------------------------------------------
     D GSK_VALIDATION_SUCCESSFUL...
     D                 C                   CONST(0)
     D GSK_UNKNOWN_CRIT_EXTNS...
     D                 C                   CONST(575019)
     D GSK_NO_CRLS_FOUND...
     D                 C                   CONST(575040)

     d gsk_attribute_set_callback...
     d                 PR            10i 0 extproc('gsk_attribute_set_callback')
     d  my_gsk_handle                      like(gsk_handle) value
     d  callbackID                   10i 0 value
     d  callBackArea                   *   value

